{"version":3,"sources":["Components/MovieList/MovieList.module.css","Components/MovieList/MovieList.jsx","views/MoviesView.js"],"names":["module","exports","MovieList","movies","location","useLocation","map","id","title","className","styles","li","a","to","pathname","state","from","search","MoviesView","useState","inputValue","setInputValue","setMovies","history","useHistory","searchQuery","URLSearchParams","get","useEffect","themoviedbAPI","then","results","onSubmit","event","preventDefault","trim","push","alert","name","value","onChange","target","toLowerCase","type","autoComplete","autoFocus","placeholder"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,GAAK,sBAAsB,EAAI,uB,wJCElC,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,EAAWC,cAEjB,OACE,mCACGF,GACC,6BACGA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,oBAAIC,UAAWC,IAAOC,GAAtB,SACE,cAAC,IAAD,CACEF,UAAWC,IAAOE,EAClBC,GAAI,CACFC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACLC,KACwB,MAAtBZ,EAASU,SACL,IACA,SAAWV,EAASa,SARhC,SAYGT,KAb0BD,UCJ5B,SAASW,IACtB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,MAArC,mBAAOhB,EAAP,KAAemB,EAAf,KACMC,EAAUC,cACVpB,EAAWC,cAEXoB,EAAc,IAAIC,gBAAgBtB,EAASa,QAAQU,IAAI,SAE7DC,qBAAU,WACJH,IACFI,IACoBJ,GACjBK,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAUS,MACnCV,EAAcI,MAEf,CAACA,IAmBJ,OACE,qCAEE,uBAAMO,SAhBO,SAACC,GAChBA,EAAMC,iBACFd,EAAWe,QACbN,IACoBT,GACjBU,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAUS,MAEnCR,EAAQa,KAAR,2BAAkBb,EAAQnB,UAA1B,IAAoCa,OAAO,UAAD,OAAYG,OAEtDiB,MAAM,sCAON,UACE,uBACE5B,UAAU,QACV6B,KAAK,aACLC,MAAOnB,EACPoB,SAzBa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBpB,EAAcoB,EAAOF,MAAMG,gBAyBrBC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAGd,wBAAQrC,UAAU,MAAMkC,KAAK,SAA7B,SACE,+CAIJ,cAACzC,EAAD,CAAWC,OAAQA","file":"static/js/5.13dbf561.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"MovieList_li__fXuYS\",\"a\":\"MovieList_a__1sKzh\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport styles from \"./MovieList.module.css\";\r\n\r\nexport default function MovieList({ movies }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      {movies && (\r\n        <ul>\r\n          {movies.map(({ id, title }) => (\r\n            <li className={styles.li} key={id}>\r\n              <Link\r\n                className={styles.a}\r\n                to={{\r\n                  pathname: `/movie/${id}`,\r\n                  state: {\r\n                    from:\r\n                      location.pathname === \"/\"\r\n                        ? \"/\"\r\n                        : \"/movie\" + location.search,\r\n                  },\r\n                }}\r\n              >\r\n                {title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport * as themoviedbAPI from \"../services/themoviedb-api\";\r\n\r\n// import PageHeading from \"../Components/PageHeading/PageHeading\";\r\nimport MovieList from \"../Components/MovieList/MovieList\";\r\n\r\nexport default function MoviesView() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [movies, setMovies] = useState(null);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const searchQuery = new URLSearchParams(location.search).get(\"query\");\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      themoviedbAPI\r\n        .fetchSearchMovie(searchQuery)\r\n        .then(({ results }) => setMovies(results));\r\n      setInputValue(searchQuery);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setInputValue(target.value.toLowerCase());\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (inputValue.trim()) {\r\n      themoviedbAPI\r\n        .fetchSearchMovie(inputValue)\r\n        .then(({ results }) => setMovies(results));\r\n\r\n      history.push({ ...history.location, search: `?query=${inputValue}` });\r\n    } else {\r\n      alert(\"Enter a valid movie title, please\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <PageHeading text=\"Movies\" /> */}\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          className=\"input\"\r\n          name=\"inputValue\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies\"\r\n        />\r\n\r\n        <button className=\"btn\" type=\"submit\">\r\n          <span>Search</span>\r\n        </button>\r\n      </form>\r\n\r\n      <MovieList movies={movies} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}